const should = require("should");
const truffleAssert = require("truffle-assertions");

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("SquareVerifier");

const solutions = require("../../scripts/solutions");

contract("SquareVerifier", accounts => {
  const account_one = accounts[0];

  beforeEach(async function() {
    this.contract = await SquareVerifier.new({ from: account_one });
  });

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  it("correct proof", async function() {
    const verified = await this.contract.verifyTx(
      solutions[0].a,
      solutions[0].b,
      solutions[0].c,
      solutions[0].input
    );
    truffleAssert.eventEmitted(verified, "Verified");
  });

  // Test verification with incorrect proof
  it("incorrect proof", async function() {
    const verified = await this.contract.verifyTx(
      solutions[0].a,
      solutions[0].b,
      solutions[0].c,
      [3, 5]
    );
    truffleAssert.eventNotEmitted(verified, "Verified");
  });
});
