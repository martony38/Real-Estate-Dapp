const should = require("should");
const truffleAssert = require("truffle-assertions");

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require("SquareVerifier");

const solution = {
  proof: {
    a: [
      "0x2af927d30d940b2b0b573cc8356629fab16d3c90f8f4d89aef71ade51f8517af",
      "0x28a259cc0fe7e693efa594e8c6a8cbc8bf3a078e7ed65a1b4d1b78967a4a68fa"
    ],
    b: [
      [
        "0x0346c52be0ee2493c40c75d217adbb739269dcef89dbe31f66b3efa5fdcdd672",
        "0x2cda54848fce00a5a6fa1d6c56787db04d8886448e0ad4ace16bbd624ce5b542"
      ],
      [
        "0x04cd36b2d6c31b58a8fcac6f0f6bd49ff9aebdd6aca0b9b014ba0bc2cf9220f8",
        "0x0f74944954a5dacc3fc2067f1ac0ca7faaf3224d3614432555a7a0f58366f3a7"
      ]
    ],
    c: [
      "0x0d2d5e83b4feb642262f6fe3d6211ab3d6636562c049e13404b747f9e7afe5a5",
      "0x30502473e0b1829eabd590c401242182f3a81b48a6a9a370b3dc9053ac407124"
    ]
  },
  inputs: [4, 1]
};

contract("SquareVerifier", accounts => {
  const account_one = accounts[0];

  beforeEach(async function() {
    this.contract = await SquareVerifier.new({ from: account_one });
  });

  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  it("correct proof", async function() {
    const verified = await this.contract.verifyTx(
      solution.proof.a,
      solution.proof.b,
      solution.proof.c,
      solution.inputs
    );
    truffleAssert.eventEmitted(verified, "Verified");
  });

  // Test verification with incorrect proof
  it("incorrect proof", async function() {
    const verified = await this.contract.verifyTx(
      solution.proof.a,
      solution.proof.b,
      solution.proof.c,
      [3, 5]
    );
    truffleAssert.eventNotEmitted(verified, "Verified");
  });
});
